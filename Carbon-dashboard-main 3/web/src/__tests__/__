import * as React from "react";
import "@testing-library/jest-dom/extend-expect";
import { rest } from "msw";
import { setupServer } from "msw/lib/node";

import { render, screen, waitFor, fireEvent } from "../utils/test-utils";
import Dashboard from "../components/Dashboard/Dashboard";

const server = setupServer(
  rest.get(
    "http://localhost:8001/hornetpowertool/sjkl241",
    async (req, res, ctx) => {
      return res(
        ctx.json({
          toolType: "drill",
          serialNumber: "32hvaso2",
          imageURL:
            "https://cdn.thewirecutter.com/wp-content/media/2020/12/powerdrills-2048px-0818.jpg",
          components: [
            {
              type: "motor",
              serialNumber: "PMcQLNWf",
              co2: 1500,
            },
            {
              type: "battery",
              serialNumber: "ogcmYbNn",
              co2: 900,
            },
          ],
          transport: {
            transportationMethod: "ground",
            trackingId: "4gedrgq2",
            co2: 342422,
          },
        })
      );
    }
  )
);

beforeAll(() => server.listen());
afterEach(() => server.resetHandlers());
afterAll(() => server.close());

test("loads and displays dashboard screen", async () => {
  render(<Dashboard />);

  const elem = screen.getByTestId("dashboard-container");

  expect(elem).toBeInTheDocument();
});

test("should have both serial number input and submit button", async () => {
  render(<Dashboard />);

  expect(screen.getByTestId("serialnum-input")).toBeInTheDocument();
  expect(screen.getByTestId("submit-button")).toBeInTheDocument();
});

test("should call get hpt endpoint and render the results", async () => {
  render(<Dashboard />);

  fireEvent.change(screen.getByTestId("serialnum-input"), {
    target: { value: "sjkl241" },
  });
  fireEvent.click(screen.getByTestId("submit-button"));

  await waitFor(() => {
    expect(screen.getByTestId("hpt-spinner")).toBeInTheDocument();
  });
  await waitFor(() => {
    expect(screen.getByTestId("hpt-results-table")).toBeInTheDocument();
  });
});

test("row should expand to display co2 breakdown", async () => {
  render(<Dashboard />);

  fireEvent.change(screen.getByTestId("serialnum-input"), {
    target: { value: "sjkl241" },
  });
  fireEvent.click(screen.getByTestId("submit-button"));

  await waitFor(() => {
    expect(screen.getByTestId("hpt-results-table")).toBeInTheDocument();
  });
  fireEvent.click(screen.getByTestId("expand-button"));
  expect(screen.getByText(/co2 value \(in kgco2\)/i)).toBeInTheDocument();
});

test("should show error if tool is not found", async () => {
  server.use(
    rest.get(
      "http://localhost:8001/hornetpowertool/sjkl241",
      async (req, res, ctx) => {
        return res(ctx.status(404));
      }
    )
  );

  render(<Dashboard />);

  fireEvent.change(screen.getByTestId("serialnum-input"), {
    target: { value: "sjkl241" },
  });
  fireEvent.click(screen.getByTestId("submit-button"));

  await waitFor(() => {
    expect(screen.getByText(/Tool doesn't exist!/i)).toBeInTheDocument();
  });
});
